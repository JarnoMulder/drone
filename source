import socket
import time
import threading


#adres van tello - altijd hetzelfde
tello = ('192.168.10.1', 8889)

#adres van locale pc - altijd hetzelfde
local = ('0.0.0.0',9010)

def init_drone():
 
    # create upd client on PC
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    except socket.error as err:
        print(err)
        exit()
        
   #kopppelen
    s.bind(local)
   
    try:
        # send command om in de juiste modus te zetten
        s.sendto("command".encode(), tello)
        print('command')
        response, ip_address = s.recvfrom(128)
        print(response.decode(encoding='utf-8'))
        
        time.sleep(2)
        
    except socket.error as err:
        print(err)
 
    return s


 
def info(s):

    print('-----------Informaiton------------')
    
    s.sendto("battery?".encode(), tello)
    response, ip_address = s.recvfrom(128)

    print('Battery: ',  response.decode(encoding='utf-8'))
   
 
def takeoff(s):
    s.sendto('takeoff'.encode(), tello)
    time.sleep(10)
 
def land(s):
    s.sendto('land'.encode(), tello)
    time.sleep(5)
    
def up(s):
    s.sendto('up'.encode(), tello)
    time.sleep(5)

def down(s):
    s.sendto('down'.encode(), tello)
    time.sleep(5)
    
def left(s):
    s.sendto('left'.encode(), tello)
    time.sleep(2)
    
def right(s):
    s.sendto('right'.encode(), tello)
    time.sleep(2)
    
def flip(s):
    s.sendto('flip'.encode(), tello)
    time.sleep(5)
    
def forward(s):
    s.sendto('forward'.encode(), tello)
    time.sleep(2)
    
def back(s):
    s.sendto('back'.encode(), tello)
    time.sleep(2)
    
def turncw(s):
    s.sendto('cw'.encode(), tello)
    time.sleep(4)
    
def turnccw(s):
    s.sendto('ccw'.encode(), tello)
    time.sleep(4)
 
 def input(s):
    I1 = input()
    s.sendto('I1
 
def main():
    s = init_drone()

    takeoff(s)
    info(s)
    land(s)
 
if __name__ == '__main__':
    main()
